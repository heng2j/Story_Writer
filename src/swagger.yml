swagger: "2.0"
info:
  description: This is the swagger file that goes with our server code
  version: "1.0.0"
  title: Swagger ReST Article
consumes:
  - application/json
produces:
  - application/json

basePath: /api

# Paths supported by the server application
paths:

  /synonym/{input_phase}:
    get:
      operationId: synonym.get_one_random
      tags:
        - Synonym
      summary: Get one random synonym from a given phase
      description: Get one random synonym
      parameters:
        - name: input_phase
          in: path
          description:  A phase composed by a list of words to query from
          type: string
          required: True
      responses:
        200:
          description: Successfully get one random synonym from given phase
          schema:
            properties:
              synonym:
                type: string
                description: One random synonym from given phase

  /rhymed/{given_word}:
    get:
      operationId: rhymed.get_rhymed_list
      tags:
        - Rhymed
      summary: Get a list of English words that rhymed with the given word
      description: Get a list of English words that rhymed with the given word
      parameters:
        - name: given_word
          in: path
          description:  A single English word
          type: string
          required: True
      responses:
        200:
          description: Successfully get a list of English words that rhymed with the given word
          schema:
            type: array
            items:
              properties:
                word:
                  type: string
                  description:  A English words that rhymed with the given word

  /songs/search:
    get:
      operationId: songs.get_one_song
      tags:
        - Songs
      summary: Get a song objects with the given artist name and song title
      description: Get a song objects with the given artist name and song title
      parameters:
        - name: artist
          in: query
          description:  A artist name
          type: string
          required: True
        - name: song_title
          in: query
          description:  A song title
          type: string
          required: True
      responses:
        200:
          description: Successfully get a song objects with the given artist name and song title
          schema:
            type: object
            properties:
              artist:
                type: string
                description: Artist name
              year:
                type: integer
                description: Song released year
              song:
                type: string
                description: Song title
              timestamp:
                type: string
                description: Song creation/update timestamp
              genre:
                type: string
                description: Song genre
              lyrics:
                type: string
                description: Song lyrics

  /songs:
    post:
      operationId: songs.create_update_song
      tags:
        - Songs
      summary: Create a new song or update a existing song (Upsert)
      description: This function will create a new song if it is not already exist in the song structure. If the song is exist, it will update the song instead.
      parameters:
        - name: song
          in: body
          description: Song to create
          required: True
          schema:
            type: object
            properties:
              artist:
                type: string
                description: Artist name
              year:
                type: integer
                description: Song released year
              song:
                type: string
                description: Song title
              genre:
                type: string
                description: Song genre
              lyrics:
                type: string
                description: Song lyrics
      responses:
        201:
          description: Successfully created or updated song
          schema:
            properties:
              song_id:
                type: integer
                description: Id of the song
              artist:
                type: string
                description: Artist name
              year:
                type: integer
                description: Song released year
              song:
                type: string
                description: Song title
              timestamp:
                type: string
                description: Song creation/update timestamp
              genre:
                type: string
                description: Song genre
              lyrics:
                type: string
                description: Song lyrics



  /songs/{given_word}:
    get:
      operationId: songs.get_top_sample_lyrics
      tags:
        - Songs
      summary: Get a list of song objects which lyrics contained the given word
      description: Get a list of song objects which lyrics contained the given word
      parameters:
        - name: given_word
          in: path
          description:  A single English word
          type: string
          required: True
      responses:
        200:
          description: Successfully get a list of song objects which lyrics contained the given word
          schema:
            type: array
            items:
              properties:
                artist:
                  type: string
                  description: Artist name
                year:
                  type: integer
                  description: Song released year
                song:
                  type: string
                  description: Song title
                timestamp:
                  type: string
                  description: Song creation/update timestamp
                genre:
                  type: string
                  description: Song genre
                lyrics:
                  type: string
                  description: Song lyrics

  /songs/{song_id}:
    get:
      operationId: songs.get_one_song_by_id
      tags:
        - Songs
      summary: Get a song objects with the given song id
      description: Get a song objects with the given song id
      parameters:
        - name: song_id
          in: path
          description: Id of the song to query
          type: integer
          required: True
      responses:
        200:
          description: Successfully get a song objects with the given song id
          schema:
            type: object
            properties:
              artist:
                type: string
                description: Artist name
              year:
                type: integer
                description: Song released year
              song:
                type: string
                description: Song title
              timestamp:
                type: string
                description: Song creation/update timestamp
              genre:
                type: string
                description: Song genre
              lyrics:
                type: string
                description: Song lyrics
    delete:
      operationId: songs.delete_song_by_id
      tags:
        - Songs
      summary: Delete a song with given song object
      parameters:
        - name: song_id
          in: path
          description: Id of the song to be deleted
          type: integer
          required: True
      responses:
        200:
          description: Successfully deleted a song